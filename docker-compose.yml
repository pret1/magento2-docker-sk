version: "3"
services:
  varnish:
    container_name: varnish
    build:
      context: ./docker/varnish/
    ports:
      - 6081:6081

  redis:
    container_name: redis
    command: redis-server --appendonly no --maxmemory-policy allkeys-lru --maxmemory 500mb --loglevel verbose
    restart: always
    image: redis:latest
    hostname: redis.${DOMAIN_NAME}
    ports:
      - 127.0.0.1:6379:6379

  elastic:
    container_name: elastic
    build:
      context: ./docker/elasticsearch
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elasticsearch:/usr/share/elasticsearch/data
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms1024m -Xmx1024m"
    ports:
      - 9200:9200

  nginx:
    container_name: nginx
    build:
      context: ./docker/nginx/
    working_dir: /etc/nginx
    ports:
      # {internal_in_docker}:{external_from_browser}
      - 80:80
      - 443:443
      - 8001:8001
    volumes:
      - ./magento:/var/www/magento
    env_file:
      - ./.env

  magento:
    container_name: magento
    hostname: fpm.${DOMAIN_NAME}
    build:
      context: ./docker/php-fpm/
    volumes:
      - ./magento:/var/www/magento
      - ./docker/volume/.composer:/home/magento/.composer
    extra_hosts:
      - "${DOMAIN_NAME}:${LOCAL_HOST_IP}"
    env_file:
      - ./composer.env
      - ./.env
      - ./config.env
    environment:
      - XDEBUG_CONFIG=idekey=PHPSTORM
      - PHP_IDE_CONFIG=serverName=${DOMAIN_NAME}

  mysql:
    container_name: mysql
    build:
      context: ./docker/mysql
    ports:
      - 3306:3306
    volumes:
      - ./docker/volume/mysql:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - MYSQL_DATABASE=${DB_DATABASE}
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - TERM=meh

  magento_cli:
    container_name: magento_cli
    build:
      context: ./docker/php-cli/
    hostname: cli.${DOMAIN_NAME}
    volumes:
      - ./docker/volume/.composer/cache:/root/.composer/cache
      - ./magento:/var/www/magento
    env_file:
      - ./composer.env
      - ./config.env
      - ./.env

  magento_cron:
    container_name: magento_cron
    build:
      context: ./docker/php-cli/
    hostname: magento2-cron.docker
    command: run-cron
    environment:
      - ENABLE_SENDMAIL=true
    volumes:
      - ./magento:/var/www/magento
    env_file:
      - ./composer.env
      - ./config.env
      - ./.env

  chrome:
    container_name: chrome
    image: selenium/standalone-chrome:3.141.59-titanium
    volumes:
      - /dev/shm:/dev/shm
    ports:
      - 4444:4444
    extra_hosts:
      - "${DOMAIN_NAME}:${LOCAL_HOST_IP}"

  rabbit:
    container_name: rabbit
    build:
      context: ./docker/rabbit
    image: rabbitmq:latest
    hostname: rabbit.${DOMAIN_NAME}
    ports:
      - 15672:15672
      - 5672:5672
    expose:
      - 15672
      - 5672
    volumes:
      - rabbitmq:/var/lib/rabbitmq
    env_file:
      - ./.env

volumes:
  elasticsearch:
  rabbitmq:
